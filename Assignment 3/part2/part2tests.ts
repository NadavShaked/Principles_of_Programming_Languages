import { L4toMermaid } from "./mermaid";
import { isOk } from "../shared/result";

////TESTSSSS   
const p1 = L4toMermaid(`(L4 1 #t "hello") `);
const p2 = L4toMermaid(`(if #t 1 2)`);
const p3= L4toMermaid(`(if (< x 2) (+ x 3) (lambda (x) (+ x 1)))`);
const p4 =L4toMermaid(`(+ (+ 1 2) (- 4 3))`);
const p5 = L4toMermaid(`( lambda (x y) (+ x y) 1 (- x y))`);
const p6 =L4toMermaid(`(lambda (x y) ((lambda (x) (+ x y)) (+ x x)) 1)`);
const p7 =L4toMermaid(`(letrec ((fact (lambda (n) (if (= n 0) 1 (* n (fact (- n 1)))))))(fact 3))`);
const p8 =L4toMermaid(`(let ((x 3) (y 5)) 3)`);
const p9 =L4toMermaid(`(let ((x 3) (y 5)) (+ x y))`);
const p10 =L4toMermaid(`1`);
const p11 =L4toMermaid(`(L4 (define square (lambda (x) (* x x))) (square 3))`);
const p12 =L4toMermaid(`(L4 (define b (> 3 4)) (define x 5) (define f (lambda (y) (+ x y))) (define g (lambda (y) (* x y))) (if (not b) (f 3) (g 4)) ((lambda (x) (* x x)) 7))`);
const p13 =L4toMermaid(`(L4 (lambda (z) (x z)))`);
const p14 =L4toMermaid(`(L4 ((lambda (x) (number? x y)) x))`);
const p15 =L4toMermaid(`(define my-list '(1 2 3 4 5))`);
const p16 =L4toMermaid(`(+ 3 5 7)`);

isOk(p1)? console.log(p1.value) : console.log('not good1');
console.log('\n');
isOk(p2)? console.log(p2.value) : console.log('not good2');
console.log('\n');
isOk(p3)? console.log(p3.value) : console.log('not good3');
console.log('\n');
isOk(p4)? console.log(p4.value) : console.log('not good4');
console.log('\n');
isOk(p5)? console.log(p5.value) : console.log('not good5');
console.log('\n');
isOk(p6)? console.log(p6.value) : console.log('not good6');
console.log('\n');
isOk(p7)? console.log(p7.value) : console.log('not good7');
console.log('\n');
isOk(p8)? console.log(p8.value) : console.log('not good8');
console.log('\n');
isOk(p9)? console.log(p9.value) : console.log('not good9');
console.log('\n');
isOk(p10)? console.log(p10.value) : console.log('not good10');
console.log('\n');
isOk(p11)? console.log(p11.value) : console.log('not good11');
console.log('\n');
isOk(p12)? console.log(p12.value) : console.log('not good12');
console.log('\n');
isOk(p13)? console.log(p13.value) : console.log('not good13');
console.log('\n');
isOk(p14)? console.log(p14.value) : console.log('not good14');
console.log('\n');
isOk(p15)? console.log(p15.value) : console.log('not good15');
console.log('\n');
isOk(p16)? console.log(p16.value) : console.log('not good16');
console.log('\n');